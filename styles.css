body {
    min-height: 100vh;
    display: grid;
    place-content: center;
    background: hsl(48, 18%, 83%);
}

.examples {
    padding: 3rem;
    max-width: 1200px;
    display: flex;
    gap: clamp(2rem, 8vw, 4rem);
}

button {
    background: transparent;
    border: 10px solid var(--button-color, #000);
    border-radius: 1rem;
}

/* BUTTON ONE */

.button-one {
    --button-color: #333;
}

.button-one .line {
    transition:
        transform 300ms ease-in 300ms,
        rotate 300ms ease-in,
        opacity 0ms 300ms;
    transform-origin: center;
}

.button-one[aria-expanded='true'] .line {
    transition:
        transform 300ms ease-in,
        rotate 300ms ease-in 300ms,
        opacity 0ms 300ms;
}

.button-one[aria-expanded='true'] .middle {
    opacity: 0;
}

/* Kevin follows a bad practice here of manipulating 
 * svg x and y coords, this solution doesn't work in 
 * modern browsers, this is more proper: */
.button-one[aria-expanded='true'] .top {
    rotate: 45deg;
    transform: translate(0px, 20px);
}

.button-one[aria-expanded='true'] .bottom {
    rotate: -45deg;
    transform: translate(0px, -20px);
}

/* BUTTON TWO */

.button-two {
    --button-color: #232;
}

/* Trying to just running to-close-icon with 
 * reverse instead will only run animation once. */
.button-two .line {
    animation: to-open-icon 1s forwards;
}

.button-two[aria-expanded='true'] .line {
    animation: to-close-icon 1s forwards;
}

.button-two[ria-expanded='true'] .line.top {
    --rotation: -45deg;
    transform-origin: 65px 45px;
}

.button-two[aria-expanded='true'] .line.bottom {
    --rotation: 45deg;
    transform-origin: 60px 55px;
}

@keyframes to-close-icon {
    0% {
        stroke-dashoffset: 0;
    }
    40% {
        stroke-dashoffset: 79.9;
    }
    60% {
        stroke-dashoffset: 79.9;
        rotate: var(--rotation);
    }
    100% {
        stroke-dashoffset: 0;
        rotate: var(--rotation);
    }
}

/* Doesn't quite reverse animation */
@keyframes to-open-icon {
    0% {
        stroke-dashoffset: 0;
        rotate: var(--rotation);
    }
    40% {
        stroke-dashoffset: 79.9;
        rotate: var(--rotation);
    }
    60% {
        stroke-dashoffset: 79.9;
    }
    100% {
        stroke-dashoffset: 0;
    }
}

/* BUTTON THREE */
.button-three {
    --button-color: black;
    overflow: hidden;
}

.button-three .hamburger {
    transition:
        translate 1s,
        rotate 1s;
}

.button-three[aria-expanded='true'] .hamburger {
    translate: 10px -10px;
    rotate: 0.125turn;
}

.button-three .line {
    transition: 1s;
    stroke-dasharray: 60 31 60 300;
}

.button-three[aria-expanded='true'] .line {
    stroke-dasharray: 60 105 60 300;
    stroke-dashoffset: -90;
}
